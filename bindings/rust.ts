/*
 Generated by typeshare 1.6.0
*/

export interface FlyableAirframe {
	id: string;
	name: string;
}

/** A `PayloadWeapon` represents weapon(s) hung from a launcher represented as a `Payload` */
export interface PayloadWeapon {
	id: string;
	display_name: string;
	name: string;
	ws_type: string;
	quantity: number;
}

/** A `Payload` is an struct representing some combination of a launcher or pylon with a weapon that can be hung on an aircraft's station. */
export interface Payload {
	clsid: string;
	category: string;
	kind_of_shipping?: number;
	adapter_type: string;
	attribute: string;
	display_name: string;
	weight: number;
	weapons?: PayloadWeapon[];
}

export interface AirframePylon {
	name: string;
	number: number;
	order: number;
	stores: Payload[];
}

/**
 * An Airframe struct represents a complete airframe with all available properties
 * and weapons/launcer combinations for each pylon (station)
 */
export interface Airframe {
	id: string;
	name: string;
	pylons: AirframePylon[];
}

export enum Handlers {
	GetFlyableAirframes = "get_flyable_airframes",
	GetAirframeById = "get_airframe_by_id",
}

